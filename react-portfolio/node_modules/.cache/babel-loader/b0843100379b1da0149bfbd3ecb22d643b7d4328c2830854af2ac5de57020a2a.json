{"ast":null,"code":"var _jsxFileName = \"/Users/blacknblue/bootcamp/Challenge-20/React-Portfolio/react-portfolio/src/components/pages/ContactMe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ContactMe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setContact({\n      ...contact,\n      [name]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Contact data:', contact);\n    // Add your API call or other logic to handle the contact data\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: contact.name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: contact.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subject\",\n        children: \"Subject:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"subject\",\n        name: \"subject\",\n        value: contact.subject,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        name: \"message\",\n        value: contact.message,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"ZQsGc+r6Qymn+WuG7nAoM7evv2U=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ContactForm","_s","contact","setContact","name","email","subject","message","handleInputChange","event","value","target","handleSubmit","preventDefault","console","log","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/blacknblue/bootcamp/Challenge-20/React-Portfolio/react-portfolio/src/components/pages/ContactMe.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ContactMe.css';\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setContact({ ...contact, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log('Contact data:', contact);\n    // Add your API call or other logic to handle the contact data\n  };\n\n  return (\n    <div className=\"contact-form-container\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={contact.name}\n          onChange={handleInputChange}\n        />\n\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={contact.email}\n          onChange={handleInputChange}\n        />\n\n        <label htmlFor=\"subject\">Subject:</label>\n        <input\n          type=\"text\"\n          id=\"subject\"\n          name=\"subject\"\n          value={contact.subject}\n          onChange={handleInputChange}\n        />\n\n        <label htmlFor=\"message\">Message:</label>\n        <textarea\n          id=\"message\"\n          name=\"message\"\n          value={contact.message}\n          onChange={handleInputChange}\n        ></textarea>\n\n        <button type=\"submit\">Send Message</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC;IACrCO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEL,IAAI;MAAEM;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IACpCR,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACE,IAAI,GAAGM;IAAM,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEb,OAAO,CAAC;IACrC;EACF,CAAC;;EAED,oBACEH,OAAA;IAAKiB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrClB,OAAA;MAAMmB,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBAC3BlB,OAAA;QAAOoB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCxB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTrB,IAAI,EAAC,MAAM;QACXM,KAAK,EAAER,OAAO,CAACE,IAAK;QACpBsB,QAAQ,EAAElB;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAEFxB,OAAA;QAAOoB,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCxB,OAAA;QACEyB,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,OAAO;QACVrB,IAAI,EAAC,OAAO;QACZM,KAAK,EAAER,OAAO,CAACG,KAAM;QACrBqB,QAAQ,EAAElB;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAEFxB,OAAA;QAAOoB,OAAO,EAAC,SAAS;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzCxB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,SAAS;QACZrB,IAAI,EAAC,SAAS;QACdM,KAAK,EAAER,OAAO,CAACI,OAAQ;QACvBoB,QAAQ,EAAElB;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAEFxB,OAAA;QAAOoB,OAAO,EAAC,SAAS;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzCxB,OAAA;QACE0B,EAAE,EAAC,SAAS;QACZrB,IAAI,EAAC,SAAS;QACdM,KAAK,EAAER,OAAO,CAACK,OAAQ;QACvBmB,QAAQ,EAAElB;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eAEZxB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7DID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA+DjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}